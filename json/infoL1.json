[
    {
      "Matières": "Programmation impérative",
      "ECTS": 5,
      "Cours": 10,
      "TD": 14,
      "TP": 22
    },
    {
      "Matières": "Programmation impérative\r\n\r\n\r\n                            \r\n        Langue d'enseignement :\r\n          Français\r\n        \r\n      \r\n                          \r\n        ECTS :\r\n          5\r\n        \r\n      \r\n            \r\n      Détail du volume horaire :\r\n                        \r\n            Cours :\r\n                          10\r\n                      \r\n                                \r\n            Travaux dirigés :\r\n                          14\r\n                      \r\n                                \r\n            Travaux pratiques :\r\n                          22\r\n                      \r\n                                                                                                      \r\n  \r\n              \r\n              \r\n                      \r\n      Modalités d'organisation et de suivi  :\r\n                                                    \r\n        \r\n      Objectifs pédagogiques visés :\r\n                        \r\n            Objectifs d'apprentissage :\r\n                          Introduction à la programmation impérative (en C++)\r\n                      \r\n                                \r\n            Programme/plan/contenus :\r\n                          Le contenu de l'UE se décompose comme suit:   - Introduction à la programmation impérative (en C++): variables,    types, conditionnelles, boucles, fonctions, tableaux (1D et 2D),    chaînes de caractères, fichiers, compilation séparée.   - Bonnes pratiques de programmation: tests, documentation, débogage,    programmation modulaire.\r\n             Responsable : \r\n            Nicolas Thi\r\n            ér\r\n            y\r\n                      \r\n                                \r\n            Pré-requis :\r\n                          Aucun\r\n                      \r\n                                \r\n            Semestre calendaire :\r\n                          S1\r\n                      \r\n                                                            \r\n            Modalités pédagogiques particulières\r\n                          L’enseignement s’effectue sous la forme d'amphi (~100 étudiants)   et de séances de TD+TP (1h45+2h) en petits groupes (~25-35 étudiants).   Les premières séances s'appuient sur des feuilles de travail   interactives (Jupyter) permettant d'aborder les premières notions dans   un environnement web simple. Par la suite est introduite la   compilation. Les dernières semaines sont consacrées à un projet de   programmation (traitement d'image, analyse de données libres, jeu   2048, ...). Tout du long, les étudiants ont à leur disposition des   exercices en ligne (PL) pour s'entraîner et s'auto-évaluer.       Ces enseignements sont complétés par une ou deux conférences invitées sur les grands enjeux sociétaux de l'informatique."
    },
    {
      "Matières": "Intro Informatique et Python",
      "ECTS": 5,
      "Cours": 18,
      "TD": "",
      "TP": 24
    },
    {
      "Matières": "Intro Informatique et Python\r\n\r\n\r\n                            \r\n        Langue d'enseignement :\r\n          Français\r\n        \r\n      \r\n                          \r\n        ECTS :\r\n          5\r\n        \r\n      \r\n            \r\n      Détail du volume horaire :\r\n                        \r\n            Cours :\r\n                          18\r\n                      \r\n                                              \r\n            Travaux pratiques :\r\n                          24\r\n                      \r\n                                                                                                      \r\n  \r\n              \r\n              \r\n                      \r\n      Modalités d'organisation et de suivi  :\r\n                                                    \r\n        \r\n      Objectifs pédagogiques visés :\r\n                        \r\n            Objectifs d'apprentissage :\r\n                          Introduction générale à l'Informatique et à ses spécialités, utilisation de l'outil informatique, initiation au langage Python\r\n                      \r\n                                \r\n            Programme/plan/contenus :\r\n                          Ce cours propose une introduction générale à l'Informatique. Il a pour but en particulier :   \r\n\r\n                  de présenter les différents domaines de l'informatique (architecture, réseau & Web, traîtement des données, algorithmique, langages de programmation, conception d'application interactives)\r\n               \r\n\r\n                  de fournir une initiation à l'utilisation des systèmes Unix et des outils associés (ligne de commande, concepts de bases)\r\n               \r\n\r\n                   de donner des bases de programmation en Python\r\n               \r\n       \r\n            La première partie du cours aura pour but de rendre rapidement l'étudiant efficace dans un environnement Unix. La seconde partie utilise le langage Python pour aborder, par des exemples pratiques, différents domaines de l'informatique.\r\n                      \r\n                                \r\n            Pré-requis :\r\n                          Aucun\r\n                      \r\n                                \r\n            Semestre calendaire :\r\n                          S1\r\n                      \r\n                                                            \r\n            Modalités pédagogiques particulières\r\n                          L'UE s'organise en cours accompagnés de séances de TP. L'évaluation sera faite par contrôle continu (rendus de TPs, QCM, interro)."
    },
    {
      "Matières": "Algo & Structures de données",
      "ECTS": 5,
      "Cours": 18,
      "TD": 24,
      "TP": ""
    },
    {
      "Matières": "Algo & Structures de données\r\n\r\n\r\n                            \r\n        Langue d'enseignement :\r\n          Français\r\n        \r\n      \r\n                          \r\n        ECTS :\r\n          5\r\n        \r\n      \r\n            \r\n      Détail du volume horaire :\r\n                        \r\n            Cours :\r\n                          18\r\n                      \r\n                                \r\n            Travaux dirigés :\r\n                          24\r\n                      \r\n                                                                                                                    \r\n  \r\n              \r\n              \r\n                      \r\n      Modalités d'organisation et de suivi  :\r\n                                                    \r\n        \r\n      Objectifs pédagogiques visés :\r\n                        \r\n            Objectifs d'apprentissage :\r\n                          Comprendre les algorithmes et leur complexité\r\n                      \r\n                                \r\n            Programme/plan/contenus :\r\n                          Ce cours propose une première introduction formelle à l'algorithmique et aux structures de données : \r\nStructures linéaires (tableaux, listes chaînées, files, piles, …)\r\nOpération sur les structures linéaires (insertion, suppression, recherche)\r\nAlgorithmes de tris\r\nIntroduction de la notion de complexité algorithmique\r\nStructures avancées : hachage, structures arborescentes\r\n\r\n                      \r\n                                \r\n            Pré-requis :\r\n                          néant\r\n                      \r\n                                \r\n            Semestre calendaire :\r\n                          S2\r\n                      \r\n                                                            \r\n            Modalités pédagogiques particulières\r\n                          Cours et TD"
    },
    {
      "Matières": "Programmation Modulaire",
      "ECTS": 5,
      "Cours": 18,
      "TD": 24,
      "TP": ""
    },
    {
      "Matières": "Programmation Modulaire\r\n\r\n\r\n                            \r\n        Langue d'enseignement :\r\n          Français\r\n        \r\n      \r\n                          \r\n        ECTS :\r\n          5\r\n        \r\n      \r\n            \r\n      Détail du volume horaire :\r\n                        \r\n            Cours :\r\n                          18\r\n                      \r\n                                \r\n            Travaux dirigés :\r\n                          24\r\n                      \r\n                                                                                                                    \r\n  \r\n              \r\n              \r\n                      \r\n      Modalités d'organisation et de suivi  :\r\n                                                    \r\n        \r\n      Objectifs pédagogiques visés :\r\n                        \r\n            Objectifs d'apprentissage :\r\n                          initiation aux notions de structure et d'objet ainsi qu'au génie logiciel\r\n                      \r\n                                \r\n            Programme/plan/contenus :\r\n                          Le but de ce cours est de comprendre les difficultés rencontrés dès que l'on veut écrire un logiciel dépassant quelques centaines de lignes de code. Pour ceci, il faut:    - organiser et structurer les données en contrôlant les droits et responsabilités;    - décomposer le programme en composants indépendants que l'on pourra développer, tester et réutiliser séparément.   Nous aborderons les notions suivantes:    - modélisation informatique, analyse descendante, modularisation    - notions de structure de classe et d'objet    - interface et implémentation, principe d'encapsulation, données privées    - bibliothèque logicielle et compilation séparée    - tests unitaires   L'objectif pratique de ce cours est la réalisation d'une simulation, d'un jeu avec des agents (personnage, ...) évoluant dans un monde selon des règles précises de comportement.\r\n                      \r\n                                \r\n            Pré-requis :\r\n                          Maîtrise des notions de base de programmation impérative (variables, boucles, conditions, fonctions).\r\n                      \r\n                                \r\n            Semestre calendaire :\r\n                          S2\r\n                      \r\n                                                            \r\n            Modalités pédagogiques particulières\r\n                          CM + TP + Projet"
    },
    {
      "Matières": "Introduction à la science des données",
      "ECTS": 5,
      "Cours": "",
      "TD": 36,
      "TP": ""
    },
    {
      "Matières": "Introduction à la science des données\r\n\r\n\r\n                            \r\n        Langue d'enseignement :\r\n          Français\r\n        \r\n      \r\n                          \r\n        ECTS :\r\n          5\r\n        \r\n      \r\n            \r\n      Détail du volume horaire :\r\n                                      \r\n            Travaux dirigés :\r\n                          36\r\n                      \r\n                                                                                                                    \r\n  \r\n              \r\n              \r\n                      \r\n      Modalités d'organisation et de suivi  :\r\n                                                    \r\n        \r\n      Objectifs pédagogiques visés :\r\n                        \r\n            Objectifs d'apprentissage :\r\n                          L'objectif de ce cours est de se familiariser avec la Science des Données et la programmation en Python en s'amusant.\r\n                      \r\n                                \r\n            Programme/plan/contenus :\r\n                          La \"science des données\" occupe une place centrale dans ce que nous appelons de nos jours \"intelligence artificielle\" car les \"machine intelligentes\" modernes sont douées d'apprentissage par l'exemple. Donc il n'y a pas de machine intelligente sans beaucoup de données et sans bonnes données. Ce cours vous donnera un aperçu de toute la chaîne de traitement des données à partir d'un exemple simple de vision par ordinateur, depuis l'acquisition des données jusqu'à l'évaluation des performances de la \"machine qui apprend\" en passant par la visualisation des données, le pré-traitements, l'extraction de caractéristiques pertinentes, et la construction d'un modèle prédictif. Nous explorerons aussi la notion de biais dans les données. Au cours de trois TPs, vous pourrez vous familiariser avec les outils informatiques en Python qui sont les plus utilisés (numpy, pandas, scikit-learn). Vous vous lancerez alors (en binômes) dans un projet qui vous permettra d'approfondir un des aspects de la chaîne de traitement. Le plus avancés pourront choisir d'essayer des méthodes de deep-learning (apprentissage profond basé sur des modèles simplifiés de réseaux de neurones). A l'issue de ce cours, nous espérons avoir éveillé votre curiosité et vous pourrez alors aborder en L2 des projets de plus grande envergure et résoudre des mini-challenges tels que la recommandation de films ou de restaurants, la reconnaissance des images d'animaux, de plantes, d'objets ou de personnes, le dépistage des maladies ou l'évaluation de l'efficacité de médicaments, l'identification des bons ou des mauvais payeurs, de clients potentiels, ou de fraudeurs, etc. Voir les projets des années précédentes:  \r\n            http://saclay.chalearn.org/\r\n                      \r\n                                \r\n            Pré-requis :\r\n                          Notions d'algèbre linéaire et de géométrie (vecteur, coordonnées, points, droites, équations de droite). Notions de probabilités (tirages aléatoires, moyenne, variance), notions de programmation en Python.\r\n                      \r\n                                \r\n            Semestre calendaire :\r\n                          S2\r\n                      \r\n                                                            \r\n            Modalités pédagogiques particulières\r\n                          Il y aura un cours chaque semaine de 2h, suivi de 2h de TPs à partir de la deuxième semaine.    Les TP 1, 2, et 3 seront commencés en classe, finis à la maison, et notés (par correction automatique)    1. Introduction: Qu'est-ce que la science des données? + TP1    2. Visualisation et analyse exploratoire de données réelles, variance des résultats. + TP2    3. Overvue de la chaîne de traitement. Présentation des projets. + TP3    4. Dépendances, corrélation et sélection de variables + TP4 = retour sur proposition de projet    5. Méthodes de classification multi-variées + TP5 = programmation du projet    6. Biais dans les données et dans les modèles + TP6 = analyse des résultats du projet    7. Apprentissage profond (réseaux de neurones) + TP7 = préparation du rapport de projet et d'une video (3 min)"
    }
  ]