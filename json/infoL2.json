[
    {
      "Matières": "Bases de données 1",
      "ECTS": 5,
      "Cours": 18,
      "TD": "",
      "TP": 24
    },
    {
      "Matières": "Bases de données 1\r\n\r\n\r\n                            \r\n        Langue d'enseignement :\r\n          Français\r\n        \r\n      \r\n                          \r\n        ECTS :\r\n          5\r\n        \r\n      \r\n            \r\n      Détail du volume horaire :\r\n                        \r\n            Cours :\r\n                          18\r\n                      \r\n                                              \r\n            Travaux pratiques :\r\n                          24\r\n                      \r\n                                                                                                      \r\n  \r\n              \r\n              \r\n                      \r\n      Modalités d'organisation et de suivi  :\r\n                                                    \r\n        \r\n      Objectifs pédagogiques visés :\r\n                        \r\n            Objectifs d'apprentissage :\r\n                          Étude des principes des Systèmes de Gestion de Bases de Données (SGBD) relationnels et mise en pratique de ces principes\r\n                      \r\n                                \r\n            Programme/plan/contenus :\r\n                          Le contenu du cours est le suivant :   1. L'introduction apporte une vision globale du développement des SGBSs ainsi que des grandes fonctionnalités de ceux-ci.   2. Conception d’un schéma relationnel. Il s’agit de savoir définir un schéma relationnel complet et correct, comprenant des tables, des contraintes, des vues.   3. Langages d’interrogation et de manipulation. L’accent est mis sur SQL et ses fondements.\r\n             Responsable : Nicole Bidoit\r\n                      \r\n                                \r\n            Pré-requis :\r\n                          Programmation\r\nArchitecture des ordinateurs\r\n\r\n                      \r\n                                \r\n            Semestre calendaire :\r\n                          S4\r\n                      \r\n                                                            \r\n            Modalités pédagogiques particulières\r\n                          Des travaux dirigés et des travaux pratiques avec un SGBD (PostgreSQL ou ORACLE) permettent de mettre en oeuvre les techniques étudiées en cours. Les étudiants développeront une mini-application permettant d'intégrer    les différents concepts de bout en bout.       Contrôle continu : partiel (QCM avancé) + TP noté\r\n          Épreuve terminale : examen écrit"
    },
    {
      "Matières": "Programmation Objet et Génie Logiciel",
      "ECTS": 5,
      "Cours": 18,
      "TD": "",
      "TP": 24
    },
    {
      "Matières": "Programmation Objet et Génie Logiciel\r\n\r\n\r\n                            \r\n        Langue d'enseignement :\r\n          Français\r\n        \r\n      \r\n                          \r\n        ECTS :\r\n          5\r\n        \r\n      \r\n            \r\n      Détail du volume horaire :\r\n                        \r\n            Cours :\r\n                          18\r\n                      \r\n                                              \r\n            Travaux pratiques :\r\n                          24\r\n                      \r\n                                                                                                      \r\n  \r\n              \r\n              \r\n                      \r\n      Modalités d'organisation et de suivi  :\r\n                                                    \r\n        \r\n      Objectifs pédagogiques visés :\r\n                        \r\n            Objectifs d'apprentissage :\r\n                          Approfondissement des concepts de la programmation objet, avec utilisation avancée du langage Java. Connaissance du cycle de vie des logiciels et des processus de développement. Outils de modélisation de systèmes logiciels et de support au développement à grande échelle. On vise à la fois la virtuosité dans la programmation d’un composant donné et la capacité à insérer ce composant dans un projet plus large. À la fin, l’étudiant doit être capable de produire du code Java lisible, robuste et réutilisable, ainsi que de lire le code source de projets réels.\r\n                      \r\n                                \r\n            Programme/plan/contenus :\r\n                          Ce cours pratique un aller-retour permanent entre des aspects de programmation objet (PO) et d’ingénierie du logiciel (GL).  Thèmes abordés en programmation Java :    \r\nClasses, interfaces, classes paramétrées\r\nHéritage et liaison dynamique\r\nItérateurs et lambda-expressions\r\nExceptions\r\nInterface utilisateur\r\n    Thèmes abordés en génie logiciel :    \r\nAnalyse et modélisation des besoins d’un système\r\nConception d’une architecture logicielle et d’une organisation de classes pour réaliser un système\r\nLangage de modélisation graphique UML\r\nSpécification d’un composant ou d’une opération\r\nValidation et test d’un composant\r\n\r\n                      \r\n                                \r\n            Pré-requis :\r\n                          S4\r\n                      \r\n                                                                          \r\n            Modalités pédagogiques particulières\r\n                          l’UE s’organise en cours accompagnés de TD ou TP. L’évaluation se fait par des épreuves de contrôle continu (TP notés ou mini-projets) et deux épreuves écrites (partiel et examen terminal)."
    },
    {
      "Matières": "Programmation Fonctionnelle Avancée",
      "ECTS": 5,
      "Cours": 18,
      "TD": "",
      "TP": 24
    },
    {
      "Matières": "Programmation Fonctionnelle Avancée\r\n\r\n\r\n                            \r\n        Langue d'enseignement :\r\n          Français\r\n        \r\n      \r\n                          \r\n        ECTS :\r\n          5\r\n        \r\n      \r\n            \r\n      Détail du volume horaire :\r\n                        \r\n            Cours :\r\n                          18\r\n                      \r\n                                              \r\n            Travaux pratiques :\r\n                          24\r\n                      \r\n                                                                                                      \r\n  \r\n              \r\n              \r\n                      \r\n      Modalités d'organisation et de suivi  :\r\n                                                    \r\n        \r\n      Objectifs pédagogiques visés :\r\n                        \r\n            Objectifs d'apprentissage :\r\n                          Maîtrise du paradigme fonctionnel\r\nConnaissance des structures de données avancées (persistante, mutables)\r\nNotion de sémantique des langages de programmation\r\n\r\n                      \r\n                                                                                                      \r\n            Modalités pédagogiques particulières\r\n                          Cours et TP notés ou interros + un examen final."
    },
    {
      "Matières": "Réseaux",
      "ECTS": 5,
      "Cours": 18,
      "TD": 24,
      "TP": ""
    },
    {
      "Matières": "Réseaux\r\n\r\n\r\n                            \r\n        Langue d'enseignement :\r\n          Français\r\n        \r\n      \r\n                          \r\n        ECTS :\r\n          5\r\n        \r\n      \r\n            \r\n      Détail du volume horaire :\r\n                        \r\n            Cours :\r\n                          18\r\n                      \r\n                                \r\n            Travaux dirigés :\r\n                          24\r\n                      \r\n                                                                                                                    \r\n  \r\n              \r\n              \r\n                      \r\n      Modalités d'organisation et de suivi  :\r\n                                                    \r\n        \r\n      Objectifs pédagogiques visés :\r\n                        \r\n            Objectifs d'apprentissage :\r\n                          Offrir les éléments de base pour comprendre le fonctionnement des réseaux informatiques et Internet\r\n                      \r\n                                \r\n            Programme/plan/contenus :\r\n                          Pour fonctionner correctement, les réseaux nécessitent un grand nombre d'équipements et de processus, rendant leur architecture souvent complexe. Pour réduire cette complexité, les différentes fonctions ont été décomposées en niveaux protocolaires. Après avoir posé les fondements des télécommunications et rappelé les bases de la transmission de l’information, cette unité d'enseignement détaille les différents niveaux des réseaux. Seront ainsi présentés les concepts suivants :\r\n             -historique et évolution d’Internet\r\n             -les principaux acteurs, L’IETF et les standards RFC.\r\n             -définition du modèle OSI et introduction au modèle TCP/IP\r\n             -bande passante, débit binaire, codage, …\r\n             -codes détecteurs, codes correcteurs, techniques d'accès\r\n             -le niveau Réseau (IP)\r\n             -le protocole IPv4\r\n             -L‘adressage IPv4 et ses contraintes\r\n             -Fonctionnement du NAT et Subnetting\r\n             -DHCP & ICMP\r\n             -L’évolution d‘IPv4 à IPv6\r\n             -Routage (RIP, BPG, OSPF)\r\n             -La couche Transport (TCP/UDP)\r\n             -Contrôle de flux et mécanismes de congestion\r\n             -Communication par sockets\r\n             Une série de travaux dirigés et de travaux pratiques permet d’assimiler et d’appliquer les différents concepts étudiés.\r\n                      \r\n                                \r\n            Pré-requis :\r\n                          Aucun\r\n                      \r\n                                \r\n            Semestre calendaire :\r\n                          S3\r\n                      \r\n                                                            \r\n            Modalités pédagogiques particulières\r\n                          Cours, TD et TP"
    },
    {
      "Matières": "Projet Info",
      "ECTS": 5,
      "Cours": "",
      "TD": 24,
      "TP": ""
    },
    {
      "Matières": "Projet Info\r\n\r\n\r\n                            \r\n        Langue d'enseignement :\r\n          Français\r\n        \r\n      \r\n                          \r\n        ECTS :\r\n          5\r\n        \r\n      \r\n            \r\n      Détail du volume horaire :\r\n                                      \r\n            Travaux dirigés :\r\n                          24\r\n                      \r\n                                                                                                                    \r\n  \r\n              \r\n              \r\n                      \r\n      Modalités d'organisation et de suivi  :\r\n                                                    \r\n        \r\n      Objectifs pédagogiques visés :\r\n                        \r\n            Objectifs d'apprentissage :\r\n                          Etude de cas data mining/machine learning, heuristiques en optimisation combinatoire, programmation C/C++, programmation parallèle avec OpenMP, démarche scientifique expérimentale.\r\n                      \r\n                                \r\n            Programme/plan/contenus :\r\n                          Le projet informatique est un mini-projet de programmation qui se veut transverse, permettant d'illustrer différentes notions vues dans d'autres cours.\r\n             L'étude de cas porte sur un problème spécifique de data-mining/machine learning tel qu'un problème de clustering.\r\n             De tels problèmes peuvent être vus comme des problèmes d'optimisation combinatoire, qui seront résolus par des techniques heuristiques et méta-heuristiques introduites dans ce cours.\r\n             Les techniques de résolution heuristique feront intervenir des notions d'algorithmique, telles que des algorithmes de backtracking ou de programmation dynamique.\r\n             Le design d'algorithmes heuristiques sera égalemnt analysé sous l'angle de la parallélisation, avec une implémentation utilisant OpenMP en C++.\r\n                      \r\n                                \r\n            Pré-requis :\r\n                          Algorithmique, Programmation Orientée Objet, Programmation C/C++\r\n                      \r\n                                \r\n            Semestre calendaire :\r\n                          S3\r\n                      \r\n                                                            \r\n            Modalités pédagogiques particulières\r\n                          Les cours en amphis serviront à introduire les notions nouvelles du projet, sensibiliser à la démarche scientifique expérimentale, rappeler des notions de Programmation Orientée Objet en C++ , et présenter quelques fonctionnalités d'OpenMP pour du calcul parallèle en C/C++. Les séances de TP permettront de travailler sur les projets avec l'aide de l'enseignant en complément de travail personnel entre les séances de TP."
    },
    {
      "Matières": "Algorithmique avancée",
      "ECTS": 5,
      "Cours": "",
      "TD": "",
      "TP": ""
    },
    {
      "Matières": "Algorithmique avancée\r\n\r\n\r\n                            \r\n        Langue d'enseignement :\r\n          Français\r\n        \r\n      \r\n                          \r\n        ECTS :\r\n          5\r\n        \r\n      \r\n              \r\n              \r\n              \r\n                      \r\n      Modalités d'organisation et de suivi  :\r\n                                                    \r\n        \r\n      Objectifs pédagogiques visés :"
    }
  ]